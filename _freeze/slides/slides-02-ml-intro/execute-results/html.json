{
  "hash": "2ce8b3c18a609ccac40f9ab91b29bd39",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Introduction to Machine Learning\"\nformat:\n    revealjs:\n        html-math-method: mathjax\n        slide-number: true\n        slide-level: 2\n        theme:\n          - slides.scss\n        center: true\n        resources:\n          - data/\n          - img/\n---\n\n\n\n## Which cat is AI-generated?\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n\n![](img/ai-or-not-cat.png)\n\n[Source](https://thinktan.net/are-you-sure-this-photo-is-not-ai-generated/)\n:::\n\n::: {.column width=\"40%\"}\n\n- Which one do you think is AI-generated?\n    - A\n    - B\n    - Both\n    - None\n:::\n:::: \n\n\n\n# What is Machine Learning (ML)?\n\n## Example: Image classification\n\n- Have you used search in Google Photos? You can search for \"my photos of cat\" and it will retrieve photos from your libraries containing cats.\n- This can be done using **image classification**, which is treated as a supervised learning problem. \n\n## Image classification\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n![](img/cat-or-fox.png) \n:::\n\n::: {.column width=\"40%\"}\n- Imagine writing a Python program to differenciate between cats and foxes.  \n- How would you approach it? \n::: \n\n::::\n\n## Traditional programming vs. ML {.smaller}\n\n- Traditional programming \n    - Ideal for problems where solutions can be derived through the direct application of established algorithms in a clear and predictable manner.\n    - Example: finding the shortest distance between two nodes (e.g., Dijkstra’s algorithm or the A* algorithm)\n- Machine learning\n    - Appropriate for scenarios where defining explicit rules or algorithms is challenging due to the complexity or scale of the data.\n    - Example: Distinguishing between images of cats and foxes by training a machine learning model to recognize patterns that differentiate the two.\n\n##  What is ML? \n\n- ML uses data to build models that identify patterns, make predictions, or generate content.\n- It enables computers to learn from data.\n- No single model is suitable for all situations.\n\n## When is ML suitable?\n\n- ML excels when the problem involve identifying complex patterns or relationships in large datasets that are difficult for humans to discern manually.\n- Rule-based systems are suitable where clear and deterministic rules can be defined. Good for structured decision making. \n- Human experts are good with problems which require deep contextual understanding, ethical judgment, creative input, or emotional intelligence.\n\n## Supervised learning\n\n- We wish to find a model function $f$ that relates $X$ to $y$.\n- We use the model function to predict targets of new examples. \n\n![](img/sup-learning.png){.nostretch fig-align=\"center\" width=\"700px\"}\n\n\n## Scenario\n\nImagine you're taking a course with four homework assignments and two quizzes. You’re feeling nervous about Quiz 2, so you want to predict your Quiz 2 grade based on your past performance. You collect data your friends who took the course in the past. \n\n## Terminology {.smaller}\n\nHere are a few rows from the data. \n\n![](img/sup-ml-terminology.png)\n\n- **Features:** relevant characteristics of the problem, usually suggested by experts  (typically denoted by $X$). \n- **Target:** the variable we want to predict (typically denoted by $y$). \n- **Example:** A row of feature values\n\n## Running example {.smaller}\n\n::: {#aece1e98 .cell execution_count=2}\n``` {.python .cell-code}\ntoy_df = pd.read_csv(DATA_DIR + 'quiz2-grade-toy-regression.csv')\ntoy_df\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ml_experience</th>\n      <th>class_attendance</th>\n      <th>lab1</th>\n      <th>lab2</th>\n      <th>lab3</th>\n      <th>lab4</th>\n      <th>quiz1</th>\n      <th>quiz2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>92</td>\n      <td>93</td>\n      <td>84</td>\n      <td>91</td>\n      <td>92</td>\n      <td>90</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>94</td>\n      <td>90</td>\n      <td>80</td>\n      <td>83</td>\n      <td>91</td>\n      <td>84</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>78</td>\n      <td>85</td>\n      <td>83</td>\n      <td>80</td>\n      <td>80</td>\n      <td>82</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>1</td>\n      <td>91</td>\n      <td>94</td>\n      <td>92</td>\n      <td>91</td>\n      <td>89</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1</td>\n      <td>77</td>\n      <td>83</td>\n      <td>90</td>\n      <td>92</td>\n      <td>85</td>\n      <td>90</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n      <td>0</td>\n      <td>70</td>\n      <td>73</td>\n      <td>68</td>\n      <td>74</td>\n      <td>71</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>0</td>\n      <td>80</td>\n      <td>88</td>\n      <td>89</td>\n      <td>88</td>\n      <td>91</td>\n      <td>91</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- Can you think of other relevant **features** for this problem? \n\n## Classification vs. Regression {.smaller}\n\n![](img/classification-vs-regression.png)\n\n## Training {.smaller}\n\n- In supervised ML, the goal is to learn a function that maps input features ($X$) to a target ($y$).\n- The relationship between $X$ and $y$ is often complex, making it difficult to define mathematically.\n- We use algorithms to approximate this complex relationship between $X$ and $y$.\n- **Training** is the process of applying an algorithm to learn the best function (or model) that maps $X$ to $y$. \n\n## Linear models {.smaller}\n\n:::: {.columns}\n\n:::{.column width=\"45%\"}\n- Linear models make an assumption that the relationship between `X` and `y` is linear. \n- In this case, with only one feature, our model is a straight line.\n- What do we need to represent a line?\n  - Slope ($w_1$): Determines the angle of the line.\n  - Y-intercept ($w_0$): Where the line crosses the y-axis.\n\n:::\n\n::: {.column width=\"55%\"}\n\n::: {#ef3c4072 .cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![](slides-02-ml-intro_files/figure-revealjs/cell-4-output-1.png){width=677 height=399}\n:::\n:::\n\n\n- Making predictions\n    - $y_{hat} = w_1 \\times \\text{\\# hours studied} + w_0$\n\n:::\n::::\n\n\n## Logistic regression {.smaller}\n- Suppose your target is binary: pass or fail \n- Logistic regression is used for such binary classification tasks.  \n- Logistic regression predicts a probability that the given example belongs to a particular class.\n- It uses **Sigmoid function** to map any real-valued input into a value between 0 and 1, representing the probability of a specific outcome.\n- A threshold (usually 0.5) is applied to the predicted probability to decide the final class label.  \n\n## Logistic regression {.smaller}\n\n:::: {.columns}\n\n:::{.column width=\"60%\"}\n\n::: {#c768f735 .cell execution_count=4}\n\n::: {.cell-output .cell-output-display}\n![](slides-02-ml-intro_files/figure-revealjs/cell-5-output-1.png){width=684 height=473}\n:::\n:::\n\n\n:::\n:::{.column width=\"40%\"}\n- Sigmoid Function: $\\hat{y} = \\sigma(w^\\top x_i + b) = \\frac{1}{1 + e^{-(w^\\top x_i + b)}}$\n- If you study $\\leq 3$ hours, you fail. \n- If you study $> 3$ hours, you pass. \n:::\n\n::::\n\n## A graphical representation of a linear model {.smaller}\n:::: {.columns}\n\n:::{.column width=\"50%\"}\n\n::: {#716663ac .cell execution_count=5}\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](slides-02-ml-intro_files/figure-revealjs/cell-6-output-1.svg){}\n:::\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n- We have 4 features: x[0], x[1], x[2], x[3]\n- The output is calculated as $y = x[0]w[0] + x[1]w[1] + x[2]w[2] + x[3]w[3]$\n- For simplicity, we are ignoring the bias term. \n:::\n::::\n\n",
    "supporting": [
      "slides-02-ml-intro_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}