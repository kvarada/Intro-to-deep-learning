{"title":"ML Problem Framing","markdown":{"yaml":{"title":"ML Problem Framing","description":"Example of framing machine learning problems","description-short":"Lab session","editor":{"render-on-save":true}},"headingText":"Scenario","containsRefs":false,"markdown":"\n\n\nImagine you work at a bank, and the current fraud detection workflow isn't performing well. Your boss asks you to explore machine learning approaches to improve the detection and flagging of fraudulent credit card transactions. While researching online, you find [Credit Card Fraud Detection dataset on Kaggle](https://www.kaggle.com/datasets/mlg-ulb/creditcardfraud) that could be useful for creating a prototype.\n\n## Problem Framing\n\n#### Is the provided dataset appropriate for the specified objective? What type of data would ideally solve your problem or research question? Are there better-suited datasets available on the internet for this objective?\n\n-   The ideal dataset should contain data about the transactions, e.g. transaction details, customer details, etc., which could be used to classify the fraud transaction. Moreover, it should contain an indicator whether it is a fraud transaction for supervised machine learning methods. If such indicator is not available, we can apply outlier detection to identify transactions which deviate much from normal transactions as frauds.\n-   The provided dataset contains target column 'Class' that indicates whether it is a fraud transaction. It also contains other columns ('Time', 'Amount', 'V1-V28') which can be used as features to predict the target column 'Class'.\n-   There are some caveats for using the dataset.\n    -   The dataset is a transformed dataset with PCA-transformed columns 'V1' - 'V28'. Without having the original dataset, we are not sure how the PCA transformation is performed. We cannot guarantee if the same transformation can be applied to any new data (e.g. real-world data of new transactions)\n    -   From the interpretation perspective, we might fail to draw any meaningful insights between the features and the target as we do not understand the meaning of the columns 'V1' - 'V28'. Moreover, we might not detect any potential bias or unfairness within the ML model if the original dataset contains sensitive information, e.g. age, gender, etc.\n-   There could possibly be better-suited datasets, for example [this dataset](https://www.kaggle.com/datasets/kartik2112/fraud-detection).\n\n#### Clearly define the expected input and the 'ideal' output. Determine if machine learning is the appropriate method for addressing this problem.\n\n-   Data Input: Data about the transactions, for example:\n    -   merchandise details: time, amount, merchant information, etc.\n    -   customer details: account balance, credit score, cardholder information, etc.\n-   Data Output: A soft prediction (probability) whether a transaction is a fraud\n-   As we can clearly define the expected input and output and we can collect the data, machine learning is the appropriate method to address the problem.\n\n#### If machine learning is deemed suitable, what should the model aim to achieve? How would you measure the model's performance?\n\n-   Our objective is to detect fraudulent transactions by having a soft prediction (probability) and a threshold to determine whether a transaction is a fraud\n-   We can expect there would potentially be false positives (legit transactions predicted as fraud) and false negatives (fraudulent transactions predicted as legit) from the predictions and the model should balance both based on our needs. For example, more false negatives might create more bad debts, while more false positives might affect the revenue.\n-   Moreover, the dataset is an unbalanced dataset with less than 1% are actual fraudulent records.\n-   We can use evaluation metrics, e.g. precision, recall, area under precision-recall curve, etc. to measure the model performance. For example, if we are trying to minimize false negatives, we would focus more on recall (true positive rate).\n\n#### How would a human tackle this issue? Can you propose any heuristic methods to solve this problem?\n\n-   It would be a data collection -\\> analysis by expert -\\> decision making -\\> remedy approach to solve this issue by human.\n    -   Data collection: We collect historical legit and fraud transactions and the related information, e.g. transaction, merchant, cardholder, etc.\n    -   Analysis by expert: Expert will deep dive into the collected data to identify any pattern/traits of the fraud transactions from the data. Moreover, they will provide a score of the likeliness of fraud for a transaction.\n    -   Decision making: A cutoff of the score will be made to classify if a transaction is a fraud.\n    -   Remedy: If the transaction is legit, no action is required. If it is a fraud, the money transfer will be on-hold. Further investigation will undergo.\n\n#### What are the major steps required to resolve this problem?\n\n-   For machine-learning based approach, we would go through similar but slightly different steps to resolve the problem\n    -   Data collection & wrangling: Data collection is similar to the above. We will also carry out data wrangling to handle unclean data (e.g. missing values) and transform data into desired format (e.g. scaling).\n    -   Model training: A subset of the data will be used to train the model to learn any pattern for fraud/legit transactions. The model will then output the predictions.\n    -   Validation/Testing: Another subset(s) of the data will be used to test the model performance, which is helpful in model selection, estimation of performance under real-world scenario, etc.\n    -   Deployment: The defined data processing pipeline and trained model will be deployed to the existing system/workflow, which can intake the transaction data and output the prediction results to the relevant stakeholder(s) for further actions.\n\n#### Draw a diagram that illustrates the input, output, and key stages of the problem-solving process.\n\n![](datasets_and_goals_files/mediabag/DSI_workshop1.drawio.png)\n\n#### Which type of machine learning would be best suited for your problem? What specific machine learning technique would be most effective for this problem?\n\n-   We have labelled data of legit/fraud transactions and our goal is to classify the transactions. Supervised machine learning is best-suited.\n-   Linear regression can be applied first to observe any linear relationship between the target and the features, and we can obtain a baseline performance.\n-   Given the possible non-linear relationship between the target and the features, non-linear algorithms (e.g. SVM) can be applied and we can observe if there is any significant improvement in model performance.\n-   Given the variety of data types (textual, numerical, etc.), decision tree based algorithm (gradient boosted tree) can be applied and we can observe if there is any significant improvement in model performance.","srcMarkdownNoYaml":"\n\n## Scenario\n\nImagine you work at a bank, and the current fraud detection workflow isn't performing well. Your boss asks you to explore machine learning approaches to improve the detection and flagging of fraudulent credit card transactions. While researching online, you find [Credit Card Fraud Detection dataset on Kaggle](https://www.kaggle.com/datasets/mlg-ulb/creditcardfraud) that could be useful for creating a prototype.\n\n## Problem Framing\n\n#### Is the provided dataset appropriate for the specified objective? What type of data would ideally solve your problem or research question? Are there better-suited datasets available on the internet for this objective?\n\n-   The ideal dataset should contain data about the transactions, e.g. transaction details, customer details, etc., which could be used to classify the fraud transaction. Moreover, it should contain an indicator whether it is a fraud transaction for supervised machine learning methods. If such indicator is not available, we can apply outlier detection to identify transactions which deviate much from normal transactions as frauds.\n-   The provided dataset contains target column 'Class' that indicates whether it is a fraud transaction. It also contains other columns ('Time', 'Amount', 'V1-V28') which can be used as features to predict the target column 'Class'.\n-   There are some caveats for using the dataset.\n    -   The dataset is a transformed dataset with PCA-transformed columns 'V1' - 'V28'. Without having the original dataset, we are not sure how the PCA transformation is performed. We cannot guarantee if the same transformation can be applied to any new data (e.g. real-world data of new transactions)\n    -   From the interpretation perspective, we might fail to draw any meaningful insights between the features and the target as we do not understand the meaning of the columns 'V1' - 'V28'. Moreover, we might not detect any potential bias or unfairness within the ML model if the original dataset contains sensitive information, e.g. age, gender, etc.\n-   There could possibly be better-suited datasets, for example [this dataset](https://www.kaggle.com/datasets/kartik2112/fraud-detection).\n\n#### Clearly define the expected input and the 'ideal' output. Determine if machine learning is the appropriate method for addressing this problem.\n\n-   Data Input: Data about the transactions, for example:\n    -   merchandise details: time, amount, merchant information, etc.\n    -   customer details: account balance, credit score, cardholder information, etc.\n-   Data Output: A soft prediction (probability) whether a transaction is a fraud\n-   As we can clearly define the expected input and output and we can collect the data, machine learning is the appropriate method to address the problem.\n\n#### If machine learning is deemed suitable, what should the model aim to achieve? How would you measure the model's performance?\n\n-   Our objective is to detect fraudulent transactions by having a soft prediction (probability) and a threshold to determine whether a transaction is a fraud\n-   We can expect there would potentially be false positives (legit transactions predicted as fraud) and false negatives (fraudulent transactions predicted as legit) from the predictions and the model should balance both based on our needs. For example, more false negatives might create more bad debts, while more false positives might affect the revenue.\n-   Moreover, the dataset is an unbalanced dataset with less than 1% are actual fraudulent records.\n-   We can use evaluation metrics, e.g. precision, recall, area under precision-recall curve, etc. to measure the model performance. For example, if we are trying to minimize false negatives, we would focus more on recall (true positive rate).\n\n#### How would a human tackle this issue? Can you propose any heuristic methods to solve this problem?\n\n-   It would be a data collection -\\> analysis by expert -\\> decision making -\\> remedy approach to solve this issue by human.\n    -   Data collection: We collect historical legit and fraud transactions and the related information, e.g. transaction, merchant, cardholder, etc.\n    -   Analysis by expert: Expert will deep dive into the collected data to identify any pattern/traits of the fraud transactions from the data. Moreover, they will provide a score of the likeliness of fraud for a transaction.\n    -   Decision making: A cutoff of the score will be made to classify if a transaction is a fraud.\n    -   Remedy: If the transaction is legit, no action is required. If it is a fraud, the money transfer will be on-hold. Further investigation will undergo.\n\n#### What are the major steps required to resolve this problem?\n\n-   For machine-learning based approach, we would go through similar but slightly different steps to resolve the problem\n    -   Data collection & wrangling: Data collection is similar to the above. We will also carry out data wrangling to handle unclean data (e.g. missing values) and transform data into desired format (e.g. scaling).\n    -   Model training: A subset of the data will be used to train the model to learn any pattern for fraud/legit transactions. The model will then output the predictions.\n    -   Validation/Testing: Another subset(s) of the data will be used to test the model performance, which is helpful in model selection, estimation of performance under real-world scenario, etc.\n    -   Deployment: The defined data processing pipeline and trained model will be deployed to the existing system/workflow, which can intake the transaction data and output the prediction results to the relevant stakeholder(s) for further actions.\n\n#### Draw a diagram that illustrates the input, output, and key stages of the problem-solving process.\n\n![](datasets_and_goals_files/mediabag/DSI_workshop1.drawio.png)\n\n#### Which type of machine learning would be best suited for your problem? What specific machine learning technique would be most effective for this problem?\n\n-   We have labelled data of legit/fraud transactions and our goal is to classify the transactions. Supervised machine learning is best-suited.\n-   Linear regression can be applied first to observe any linear relationship between the target and the features, and we can obtain a baseline performance.\n-   Given the possible non-linear relationship between the target and the features, non-linear algorithms (e.g. SVM) can be applied and we can observe if there is any significant improvement in model performance.\n-   Given the variety of data types (textual, numerical, etc.), decision tree based algorithm (gradient boosted tree) can be applied and we can observe if there is any significant improvement in model performance."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"output-file":"example.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":{"render-on-save":true},"publish":{"gh-pages":{"name":"gh-pages","branch":"main","path":"website"}},"theme":["zephyr"],"lightbox":true,"title":"ML Problem Framing","description":"Example of framing machine learning problems","description-short":"Lab session"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}